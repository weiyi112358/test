//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Arvato.CRM.EF
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class CRMEntities : DbContext
    {
        public CRMEntities()
            : base("name=CRMEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<TD_SYS_Page> TD_SYS_Page { get; set; }
        public DbSet<TM_AUTH_Role> TM_AUTH_Role { get; set; }
        public DbSet<TM_SYS_DataGroup> TM_SYS_DataGroup { get; set; }
        public DbSet<TR_AUTH_RolePage> TR_AUTH_RolePage { get; set; }
        public DbSet<TR_AUTH_UserRole> TR_AUTH_UserRole { get; set; }
        public DbSet<TD_SYS_Menu> TD_SYS_Menu { get; set; }
        public DbSet<V_Sys_DataGroupRelation> V_Sys_DataGroupRelation { get; set; }
        public DbSet<TD_SYS_BizOption> TD_SYS_BizOption { get; set; }
        public DbSet<TD_SYS_PageElement> TD_SYS_PageElement { get; set; }
        public DbSet<TM_AUTH_RolePageElementSettings> TM_AUTH_RolePageElementSettings { get; set; }
        public DbSet<TM_AUTH_DataLimit> TM_AUTH_DataLimit { get; set; }
        public DbSet<TM_Mem_SubdivisionInstance> TM_Mem_SubdivisionInstance { get; set; }
        public DbSet<TD_SYS_FilterMapping> TD_SYS_FilterMapping { get; set; }
        public DbSet<TD_SYS_PackageLimit> TD_SYS_PackageLimit { get; set; }
        public DbSet<TM_Mem_Package> TM_Mem_Package { get; set; }
        public DbSet<TM_Mem_PackageDetail> TM_Mem_PackageDetail { get; set; }
        public DbSet<TM_Mem_PackageLimit> TM_Mem_PackageLimit { get; set; }
        public DbSet<TM_Mem_CouponPool> TM_Mem_CouponPool { get; set; }
        public DbSet<TM_Mem_Account> TM_Mem_Account { get; set; }
        public DbSet<TL_Mem_LevelChange> TL_Mem_LevelChange { get; set; }
        public DbSet<TL_Act_Communication> TL_Act_Communication { get; set; }
        public DbSet<TM_Mem_Card> TM_Mem_Card { get; set; }
        public DbSet<TM_Act_Master> TM_Act_Master { get; set; }
        public DbSet<TL_Mem_CardChange> TL_Mem_CardChange { get; set; }
        public DbSet<TM_Act_InstanceSubdivision> TM_Act_InstanceSubdivision { get; set; }
        public DbSet<TM_Act_Subdivision> TM_Act_Subdivision { get; set; }
        public DbSet<TM_Act_Instance> TM_Act_Instance { get; set; }
        public DbSet<TL_Sys_SMSReceivedList> TL_Sys_SMSReceivedList { get; set; }
        public DbSet<TM_Sys_EmailSendingQueue> TM_Sys_EmailSendingQueue { get; set; }
        public DbSet<TD_SYS_Package> TD_SYS_Package { get; set; }
        public DbSet<TL_Sys_Log> TL_Sys_Log { get; set; }
        public DbSet<TL_Mem_StatusChange> TL_Mem_StatusChange { get; set; }
        public DbSet<TM_Act_CommunicationTemplet> TM_Act_CommunicationTemplet { get; set; }
        public DbSet<TM_Mem_TradeDetail> TM_Mem_TradeDetail { get; set; }
        public DbSet<TM_Act_InstanceStep> TM_Act_InstanceStep { get; set; }
        public DbSet<TM_Sys_SMSSendingQueue> TM_Sys_SMSSendingQueue { get; set; }
        public DbSet<TM_AUTH_User> TM_AUTH_User { get; set; }
        public DbSet<TD_SYS_PackageDetail> TD_SYS_PackageDetail { get; set; }
        public DbSet<V_M_TM_Mem_SubExt_contact> V_M_TM_Mem_SubExt_contact { get; set; }
        public DbSet<TM_CRM_KPIResult> TM_CRM_KPIResult { get; set; }
        public DbSet<TR_SYS_Common> TR_SYS_Common { get; set; }
        public DbSet<TM_CRM_BusinessPlan> TM_CRM_BusinessPlan { get; set; }
        public DbSet<TM_CRM_KPITarget> TM_CRM_KPITarget { get; set; }
        public DbSet<V_M_TM_SYS_BaseData_customerlevel> V_M_TM_SYS_BaseData_customerlevel { get; set; }
        public DbSet<TR_Mem_MarketActivity> TR_Mem_MarketActivity { get; set; }
        public DbSet<TM_Mem_Subdivision> TM_Mem_Subdivision { get; set; }
        public DbSet<V_M_TM_SYS_BaseData_channel> V_M_TM_SYS_BaseData_channel { get; set; }
        public DbSet<TD_SYS_Region> TD_SYS_Region { get; set; }
        public DbSet<TM_POS_TradeDetailPromotion> TM_POS_TradeDetailPromotion { get; set; }
        public DbSet<V_M_TM_SYS_BaseData_area> V_M_TM_SYS_BaseData_area { get; set; }
        public DbSet<TM_Sys_WechatSendingQueue> TM_Sys_WechatSendingQueue { get; set; }
        public DbSet<TM_Loy_Rule> TM_Loy_Rule { get; set; }
        public DbSet<TL_CRM_AliasAfterRule> TL_CRM_AliasAfterRule { get; set; }
        public DbSet<TM_SYS_BaseData> TM_SYS_BaseData { get; set; }
        public DbSet<TM_SYS_Class> TM_SYS_Class { get; set; }
        public DbSet<TD_SYS_FieldAliasParameter> TD_SYS_FieldAliasParameter { get; set; }
        public DbSet<TM_CRM_CouponLimit> TM_CRM_CouponLimit { get; set; }
        public DbSet<TM_CRM_KPI> TM_CRM_KPI { get; set; }
        public DbSet<TM_Sys_SMSCheckLog> TM_Sys_SMSCheckLog { get; set; }
        public DbSet<TL_WX_MemberSign> TL_WX_MemberSign { get; set; }
        public DbSet<TE_Mem_DynamicDimension> TE_Mem_DynamicDimension { get; set; }
        public DbSet<TL_Mem_CousumptionAmountAdjust> TL_Mem_CousumptionAmountAdjust { get; set; }
        public DbSet<TM_Mem_Master> TM_Mem_Master { get; set; }
        public DbSet<TR_SYS_InterfaceRule> TR_SYS_InterfaceRule { get; set; }
        public DbSet<TM_SYS_BlockSetting> TM_SYS_BlockSetting { get; set; }
        public DbSet<TD_SYS_TableMapping> TD_SYS_TableMapping { get; set; }
        public DbSet<TM_SYS_BlockTypeDetail> TM_SYS_BlockTypeDetail { get; set; }
        public DbSet<TD_Sys_VehicleBasicInfo> TD_Sys_VehicleBasicInfo { get; set; }
        public DbSet<TM_Mem_Ext> TM_Mem_Ext { get; set; }
        public DbSet<TM_Mem_SubExt> TM_Mem_SubExt { get; set; }
        public DbSet<V_M_TM_Mem_SubExt_vehicle> V_M_TM_Mem_SubExt_vehicle { get; set; }
        public DbSet<V_M_TM_SYS_BaseData_model> V_M_TM_SYS_BaseData_model { get; set; }
        public DbSet<V_S_TM_Mem_Master> V_S_TM_Mem_Master { get; set; }
        public DbSet<TD_SYS_FieldAlias> TD_SYS_FieldAlias { get; set; }
        public DbSet<V_M_TM_Mem_Trade_invoice> V_M_TM_Mem_Trade_invoice { get; set; }
        public DbSet<TM_Mem_CouponCreateHistory> TM_Mem_CouponCreateHistory { get; set; }
        public DbSet<TM_Mem_CouponCreateQueue> TM_Mem_CouponCreateQueue { get; set; }
        public DbSet<V_M_TM_SYS_BaseData_brand> V_M_TM_SYS_BaseData_brand { get; set; }
        public DbSet<TD_SYS_VehicleBrand> TD_SYS_VehicleBrand { get; set; }
        public DbSet<TD_SYS_VehicleLevel> TD_SYS_VehicleLevel { get; set; }
        public DbSet<TD_SYS_VehicleSeries> TD_SYS_VehicleSeries { get; set; }
        public DbSet<TD_SYS_FieldAliasDegree> TD_SYS_FieldAliasDegree { get; set; }
        public DbSet<TR_Mem_MemberLimit> TR_Mem_MemberLimit { get; set; }
        public DbSet<TM_SYS_BlockType> TM_SYS_BlockType { get; set; }
        public DbSet<TE_SYS_SMSAccountChangeStatus> TE_SYS_SMSAccountChangeStatus { get; set; }
        public DbSet<TM_Mem_Trade> TM_Mem_Trade { get; set; }
        public DbSet<V_M_TM_Mem_Trade_change> V_M_TM_Mem_Trade_change { get; set; }
        public DbSet<TD_SYS_BusinessDepartment> TD_SYS_BusinessDepartment { get; set; }
        public DbSet<TL_SYS_TradeSaleChange> TL_SYS_TradeSaleChange { get; set; }
        public DbSet<TD_SYS_DegreeModel> TD_SYS_DegreeModel { get; set; }
        public DbSet<V_M_TM_SYS_BaseData_campaign> V_M_TM_SYS_BaseData_campaign { get; set; }
        public DbSet<TR_AUTH_UserBusinessDepartment> TR_AUTH_UserBusinessDepartment { get; set; }
        public DbSet<TM_Mem_CouponCreate> TM_Mem_CouponCreate { get; set; }
        public DbSet<TL_Mem_AccountChange> TL_Mem_AccountChange { get; set; }
        public DbSet<TM_Mem_AccountDetail> TM_Mem_AccountDetail { get; set; }
        public DbSet<TM_Mem_AccountLimit> TM_Mem_AccountLimit { get; set; }
        public DbSet<TM_JPOS_CardPrepare> TM_JPOS_CardPrepare { get; set; }
        public DbSet<TM_JPOS_PasswordPrepare> TM_JPOS_PasswordPrepare { get; set; }
        public DbSet<TE_MEM_ScoreSave> TE_MEM_ScoreSave { get; set; }
        public DbSet<V_M_TM_SYS_BaseData_company> V_M_TM_SYS_BaseData_company { get; set; }
        public DbSet<V_M_TM_SYS_BaseData_gdinput> V_M_TM_SYS_BaseData_gdinput { get; set; }
        public DbSet<V_M_TM_SYS_BaseData_sortname> V_M_TM_SYS_BaseData_sortname { get; set; }
        public DbSet<V_M_TM_Mem_SubExt_openid> V_M_TM_Mem_SubExt_openid { get; set; }
        public DbSet<TM_JPOS_PromotionBillPlan> TM_JPOS_PromotionBillPlan { get; set; }
        public DbSet<TM_JPOS_PromotionBill> TM_JPOS_PromotionBill { get; set; }
        public DbSet<TM_JPOS_CardCost> TM_JPOS_CardCost { get; set; }
        public DbSet<V_M_TM_SYS_BaseData_cardType> V_M_TM_SYS_BaseData_cardType { get; set; }
        public DbSet<V_M_TM_SYS_BaseData_supplier> V_M_TM_SYS_BaseData_supplier { get; set; }
        public DbSet<TM_JPOS_PromotionItem> TM_JPOS_PromotionItem { get; set; }
        public DbSet<TM_Card_Apply> TM_Card_Apply { get; set; }
        public DbSet<TM_Card_ApplyDetail> TM_Card_ApplyDetail { get; set; }
        public DbSet<TM_Card_Box_Mapping> TM_Card_Box_Mapping { get; set; }
        public DbSet<Tm_Card_CardBox> Tm_Card_CardBox { get; set; }
        public DbSet<TM_Card_CardNo> TM_Card_CardNo { get; set; }
        public DbSet<TM_Card_CardOutTitle> TM_Card_CardOutTitle { get; set; }
        public DbSet<TM_Card_CardOutTitleDetail> TM_Card_CardOutTitleDetail { get; set; }
        public DbSet<TM_Card_ProduceDetail> TM_Card_ProduceDetail { get; set; }
        public DbSet<TM_Card_ProduceType> TM_Card_ProduceType { get; set; }
        public DbSet<TM_Card_Retrieve> TM_Card_Retrieve { get; set; }
        public DbSet<TM_Card_RetrieveDetail> TM_Card_RetrieveDetail { get; set; }
        public DbSet<TM_Card_Type> TM_Card_Type { get; set; }
        public DbSet<TD_Sys_Product> TD_Sys_Product { get; set; }
        public DbSet<TM_JPOS_CardReissue> TM_JPOS_CardReissue { get; set; }
        public DbSet<TM_Card_CardOutBranch> TM_Card_CardOutBranch { get; set; }
        public DbSet<TM_Card_CardOutBranchDetail> TM_Card_CardOutBranchDetail { get; set; }
        public DbSet<TM_JPOS_IntergralRule> TM_JPOS_IntergralRule { get; set; }
        public DbSet<TM_Card_CardRepeal> TM_Card_CardRepeal { get; set; }
        public DbSet<TM_Card_CardRepealDetail> TM_Card_CardRepealDetail { get; set; }
        public DbSet<TM_JPOS_CouponSendRule> TM_JPOS_CouponSendRule { get; set; }
        public DbSet<TM_JPOS_CouponUseRule> TM_JPOS_CouponUseRule { get; set; }
        public DbSet<TM_Mem_SubdivisionExport> TM_Mem_SubdivisionExport { get; set; }
        public DbSet<TM_Card_Produce> TM_Card_Produce { get; set; }
        public DbSet<TM_Card_Made> TM_Card_Made { get; set; }
        public DbSet<TM_JPOS_CouponList> TM_JPOS_CouponList { get; set; }
        public DbSet<TM_JPOS_CouponPool> TM_JPOS_CouponPool { get; set; }
        public DbSet<TE_JPOS_CouponSend> TE_JPOS_CouponSend { get; set; }
        public DbSet<TE_JPOS_CouponUsed> TE_JPOS_CouponUsed { get; set; }
        public DbSet<TM_Card_BatchOperation> TM_Card_BatchOperation { get; set; }
        public DbSet<TM_Card_OperationCard> TM_Card_OperationCard { get; set; }
        public DbSet<TM_Card_OperationCondition> TM_Card_OperationCondition { get; set; }
        public DbSet<Tm_Card_CardBoxNew> Tm_Card_CardBoxNew { get; set; }
        public DbSet<TM_Card_CardNoNew> TM_Card_CardNoNew { get; set; }
        public DbSet<TM_JPOS_CardSalesPrepare> TM_JPOS_CardSalesPrepare { get; set; }
        public DbSet<V_M_TM_SYS_BaseData_store> V_M_TM_SYS_BaseData_store { get; set; }
        public DbSet<TM_Card_RetrieveNew> TM_Card_RetrieveNew { get; set; }
        public DbSet<TM_Card_RetrieveDetailNew> TM_Card_RetrieveDetailNew { get; set; }
        public DbSet<TM_Card_ProduceNew> TM_Card_ProduceNew { get; set; }
        public DbSet<V_M_TM_Mem_TradeDetail_sales_discount> V_M_TM_Mem_TradeDetail_sales_discount { get; set; }
        public DbSet<V_M_TM_Mem_TradeDetail_sales_payment> V_M_TM_Mem_TradeDetail_sales_payment { get; set; }
        public DbSet<V_M_TM_SYS_BaseData_goods> V_M_TM_SYS_BaseData_goods { get; set; }
        public DbSet<TM_Mem_AbnormalTrade> TM_Mem_AbnormalTrade { get; set; }
        public DbSet<TM_JPOS_ExchangeGoods> TM_JPOS_ExchangeGoods { get; set; }
        public DbSet<TM_JPOS_ExchangeGoodsLimit> TM_JPOS_ExchangeGoodsLimit { get; set; }
        public DbSet<TM_JPOS_ExchangeGoodsDetail> TM_JPOS_ExchangeGoodsDetail { get; set; }
        public DbSet<TM_JPOS_ExchangeGoodsDetailTemp> TM_JPOS_ExchangeGoodsDetailTemp { get; set; }
        public DbSet<V_M_TM_Mem_Trade_exchange> V_M_TM_Mem_Trade_exchange { get; set; }
        public DbSet<V_M_TM_Mem_Trade_sales> V_M_TM_Mem_Trade_sales { get; set; }
        public DbSet<V_M_TM_Mem_TradeDetail_exchange_exchangeDetail> V_M_TM_Mem_TradeDetail_exchange_exchangeDetail { get; set; }
        public DbSet<TM_Loy_MemExt> TM_Loy_MemExt { get; set; }
        public DbSet<V_S_TM_Mem_Ext> V_S_TM_Mem_Ext { get; set; }
        public DbSet<V_S_TM_Loy_MemExt> V_S_TM_Loy_MemExt { get; set; }
        public DbSet<V_U_TM_Mem_Info> V_U_TM_Mem_Info { get; set; }
        public DbSet<TD_SYS_Employee> TD_SYS_Employee { get; set; }
        public DbSet<TD_SYS_WeChatConsultant> TD_SYS_WeChatConsultant { get; set; }
        public DbSet<TM_POS_MemberPromotion> TM_POS_MemberPromotion { get; set; }
        public DbSet<V_M_TM_Mem_TradeDetail_sales_product> V_M_TM_Mem_TradeDetail_sales_product { get; set; }
    
        public virtual ObjectResult<string> sp_Sys_ReturnAvaiAliasColumn(string tableName, string extCode, string aliasType, string aliasKey, string aliasSubKey)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("TableName", tableName) :
                new ObjectParameter("TableName", typeof(string));
    
            var extCodeParameter = extCode != null ?
                new ObjectParameter("ExtCode", extCode) :
                new ObjectParameter("ExtCode", typeof(string));
    
            var aliasTypeParameter = aliasType != null ?
                new ObjectParameter("AliasType", aliasType) :
                new ObjectParameter("AliasType", typeof(string));
    
            var aliasKeyParameter = aliasKey != null ?
                new ObjectParameter("AliasKey", aliasKey) :
                new ObjectParameter("AliasKey", typeof(string));
    
            var aliasSubKeyParameter = aliasSubKey != null ?
                new ObjectParameter("AliasSubKey", aliasSubKey) :
                new ObjectParameter("AliasSubKey", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_Sys_ReturnAvaiAliasColumn", tableNameParameter, extCodeParameter, aliasTypeParameter, aliasKeyParameter, aliasSubKeyParameter);
        }
    
        public virtual ObjectResult<sp_CRM_Mem_SearchForAccountChange_Result> sp_CRM_Mem_SearchForAccountChange(Nullable<int> dataGroupId, string pageIds, string dataRoleIds, string customerStatus, string memberCardNo, string customerName, string customerMobile, string carNo, string vin, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter recordCount)
        {
            var dataGroupIdParameter = dataGroupId.HasValue ?
                new ObjectParameter("dataGroupId", dataGroupId) :
                new ObjectParameter("dataGroupId", typeof(int));
    
            var pageIdsParameter = pageIds != null ?
                new ObjectParameter("pageIds", pageIds) :
                new ObjectParameter("pageIds", typeof(string));
    
            var dataRoleIdsParameter = dataRoleIds != null ?
                new ObjectParameter("dataRoleIds", dataRoleIds) :
                new ObjectParameter("dataRoleIds", typeof(string));
    
            var customerStatusParameter = customerStatus != null ?
                new ObjectParameter("customerStatus", customerStatus) :
                new ObjectParameter("customerStatus", typeof(string));
    
            var memberCardNoParameter = memberCardNo != null ?
                new ObjectParameter("memberCardNo", memberCardNo) :
                new ObjectParameter("memberCardNo", typeof(string));
    
            var customerNameParameter = customerName != null ?
                new ObjectParameter("customerName", customerName) :
                new ObjectParameter("customerName", typeof(string));
    
            var customerMobileParameter = customerMobile != null ?
                new ObjectParameter("customerMobile", customerMobile) :
                new ObjectParameter("customerMobile", typeof(string));
    
            var carNoParameter = carNo != null ?
                new ObjectParameter("carNo", carNo) :
                new ObjectParameter("carNo", typeof(string));
    
            var vinParameter = vin != null ?
                new ObjectParameter("vin", vin) :
                new ObjectParameter("vin", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CRM_Mem_SearchForAccountChange_Result>("sp_CRM_Mem_SearchForAccountChange", dataGroupIdParameter, pageIdsParameter, dataRoleIdsParameter, customerStatusParameter, memberCardNoParameter, customerNameParameter, customerMobileParameter, carNoParameter, vinParameter, pageIndexParameter, pageSizeParameter, recordCount);
        }
    
        public virtual int sp_Loy_ReturnTradeInfo(string tradeSQL, string inTable, string outTable, string tETable1, string tETable2, string tETable3)
        {
            var tradeSQLParameter = tradeSQL != null ?
                new ObjectParameter("TradeSQL", tradeSQL) :
                new ObjectParameter("TradeSQL", typeof(string));
    
            var inTableParameter = inTable != null ?
                new ObjectParameter("InTable", inTable) :
                new ObjectParameter("InTable", typeof(string));
    
            var outTableParameter = outTable != null ?
                new ObjectParameter("OutTable", outTable) :
                new ObjectParameter("OutTable", typeof(string));
    
            var tETable1Parameter = tETable1 != null ?
                new ObjectParameter("TETable1", tETable1) :
                new ObjectParameter("TETable1", typeof(string));
    
            var tETable2Parameter = tETable2 != null ?
                new ObjectParameter("TETable2", tETable2) :
                new ObjectParameter("TETable2", typeof(string));
    
            var tETable3Parameter = tETable3 != null ?
                new ObjectParameter("TETable3", tETable3) :
                new ObjectParameter("TETable3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Loy_ReturnTradeInfo", tradeSQLParameter, inTableParameter, outTableParameter, tETable1Parameter, tETable2Parameter, tETable3Parameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_Act_MarketActivityActive(Nullable<int> activityId, string selectType, Nullable<double> selectRate, Nullable<int> selectAmount)
        {
            var activityIdParameter = activityId.HasValue ?
                new ObjectParameter("activityId", activityId) :
                new ObjectParameter("activityId", typeof(int));
    
            var selectTypeParameter = selectType != null ?
                new ObjectParameter("selectType", selectType) :
                new ObjectParameter("selectType", typeof(string));
    
            var selectRateParameter = selectRate.HasValue ?
                new ObjectParameter("selectRate", selectRate) :
                new ObjectParameter("selectRate", typeof(double));
    
            var selectAmountParameter = selectAmount.HasValue ?
                new ObjectParameter("selectAmount", selectAmount) :
                new ObjectParameter("selectAmount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_Act_MarketActivityActive", activityIdParameter, selectTypeParameter, selectRateParameter, selectAmountParameter);
        }
    
        public virtual ObjectResult<sp_Act_MarketActivitySubdivision_Result> sp_Act_MarketActivitySubdivision(Nullable<long> actInsId, string cardNo, string name, string subdivisionId, Nullable<int> pagesize, Nullable<int> pageindex, ObjectParameter pagecount)
        {
            var actInsIdParameter = actInsId.HasValue ?
                new ObjectParameter("actInsId", actInsId) :
                new ObjectParameter("actInsId", typeof(long));
    
            var cardNoParameter = cardNo != null ?
                new ObjectParameter("cardNo", cardNo) :
                new ObjectParameter("cardNo", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var subdivisionIdParameter = subdivisionId != null ?
                new ObjectParameter("subdivisionId", subdivisionId) :
                new ObjectParameter("subdivisionId", typeof(string));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(int));
    
            var pageindexParameter = pageindex.HasValue ?
                new ObjectParameter("pageindex", pageindex) :
                new ObjectParameter("pageindex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Act_MarketActivitySubdivision_Result>("sp_Act_MarketActivitySubdivision", actInsIdParameter, cardNoParameter, nameParameter, subdivisionIdParameter, pagesizeParameter, pageindexParameter, pagecount);
        }
    
        public virtual int sp_Act_MarketActivityFinish()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Act_MarketActivityFinish");
        }
    
        public virtual int sp_Act_MarketActivityRecordExpired(string tblName, Nullable<System.Guid> wfRootId, Nullable<int> curStatus)
        {
            var tblNameParameter = tblName != null ?
                new ObjectParameter("tblName", tblName) :
                new ObjectParameter("tblName", typeof(string));
    
            var wfRootIdParameter = wfRootId.HasValue ?
                new ObjectParameter("wfRootId", wfRootId) :
                new ObjectParameter("wfRootId", typeof(System.Guid));
    
            var curStatusParameter = curStatus.HasValue ?
                new ObjectParameter("curStatus", curStatus) :
                new ObjectParameter("curStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Act_MarketActivityRecordExpired", tblNameParameter, wfRootIdParameter, curStatusParameter);
        }
    
        public virtual ObjectResult<sp_Act_MarketActivityRecordStep_Result> sp_Act_MarketActivityRecordStep(Nullable<long> instanceID, string tblName, Nullable<int> status)
        {
            var instanceIDParameter = instanceID.HasValue ?
                new ObjectParameter("instanceID", instanceID) :
                new ObjectParameter("instanceID", typeof(long));
    
            var tblNameParameter = tblName != null ?
                new ObjectParameter("tblName", tblName) :
                new ObjectParameter("tblName", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Act_MarketActivityRecordStep_Result>("sp_Act_MarketActivityRecordStep", instanceIDParameter, tblNameParameter, statusParameter);
        }
    
        public virtual int sp_Act_MarketActivityNextSetp(Nullable<long> instanceId, string tblName, Nullable<System.Guid> wfRootId, string resultType, Nullable<int> maxCount)
        {
            var instanceIdParameter = instanceId.HasValue ?
                new ObjectParameter("instanceId", instanceId) :
                new ObjectParameter("instanceId", typeof(long));
    
            var tblNameParameter = tblName != null ?
                new ObjectParameter("tblName", tblName) :
                new ObjectParameter("tblName", typeof(string));
    
            var wfRootIdParameter = wfRootId.HasValue ?
                new ObjectParameter("wfRootId", wfRootId) :
                new ObjectParameter("wfRootId", typeof(System.Guid));
    
            var resultTypeParameter = resultType != null ?
                new ObjectParameter("resultType", resultType) :
                new ObjectParameter("resultType", typeof(string));
    
            var maxCountParameter = maxCount.HasValue ?
                new ObjectParameter("maxCount", maxCount) :
                new ObjectParameter("maxCount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Act_MarketActivityNextSetp", instanceIdParameter, tblNameParameter, wfRootIdParameter, resultTypeParameter, maxCountParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_Act_MarketActivityPullCoupon(Nullable<long> instanceId, string tblName, Nullable<System.Guid> wfRootId, Nullable<int> maxCount)
        {
            var instanceIdParameter = instanceId.HasValue ?
                new ObjectParameter("instanceId", instanceId) :
                new ObjectParameter("instanceId", typeof(long));
    
            var tblNameParameter = tblName != null ?
                new ObjectParameter("tblName", tblName) :
                new ObjectParameter("tblName", typeof(string));
    
            var wfRootIdParameter = wfRootId.HasValue ?
                new ObjectParameter("wfRootId", wfRootId) :
                new ObjectParameter("wfRootId", typeof(System.Guid));
    
            var maxCountParameter = maxCount.HasValue ?
                new ObjectParameter("maxCount", maxCount) :
                new ObjectParameter("maxCount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_Act_MarketActivityPullCoupon", instanceIdParameter, tblNameParameter, wfRootIdParameter, maxCountParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_Act_MarketActivityPullEmail(Nullable<long> instanceId, string tblName, Nullable<System.Guid> wfRootId, Nullable<int> maxCount)
        {
            var instanceIdParameter = instanceId.HasValue ?
                new ObjectParameter("instanceId", instanceId) :
                new ObjectParameter("instanceId", typeof(long));
    
            var tblNameParameter = tblName != null ?
                new ObjectParameter("tblName", tblName) :
                new ObjectParameter("tblName", typeof(string));
    
            var wfRootIdParameter = wfRootId.HasValue ?
                new ObjectParameter("wfRootId", wfRootId) :
                new ObjectParameter("wfRootId", typeof(System.Guid));
    
            var maxCountParameter = maxCount.HasValue ?
                new ObjectParameter("maxCount", maxCount) :
                new ObjectParameter("maxCount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_Act_MarketActivityPullEmail", instanceIdParameter, tblNameParameter, wfRootIdParameter, maxCountParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_Act_MarketActivityPullNormal(Nullable<long> instanceId, string tblName, Nullable<System.Guid> wfRootId, Nullable<int> maxCount)
        {
            var instanceIdParameter = instanceId.HasValue ?
                new ObjectParameter("instanceId", instanceId) :
                new ObjectParameter("instanceId", typeof(long));
    
            var tblNameParameter = tblName != null ?
                new ObjectParameter("tblName", tblName) :
                new ObjectParameter("tblName", typeof(string));
    
            var wfRootIdParameter = wfRootId.HasValue ?
                new ObjectParameter("wfRootId", wfRootId) :
                new ObjectParameter("wfRootId", typeof(System.Guid));
    
            var maxCountParameter = maxCount.HasValue ?
                new ObjectParameter("maxCount", maxCount) :
                new ObjectParameter("maxCount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_Act_MarketActivityPullNormal", instanceIdParameter, tblNameParameter, wfRootIdParameter, maxCountParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_Act_MarketActivityPullOB(Nullable<long> instanceId, string tblName, Nullable<System.Guid> wfRootId, Nullable<int> maxCount)
        {
            var instanceIdParameter = instanceId.HasValue ?
                new ObjectParameter("instanceId", instanceId) :
                new ObjectParameter("instanceId", typeof(long));
    
            var tblNameParameter = tblName != null ?
                new ObjectParameter("tblName", tblName) :
                new ObjectParameter("tblName", typeof(string));
    
            var wfRootIdParameter = wfRootId.HasValue ?
                new ObjectParameter("wfRootId", wfRootId) :
                new ObjectParameter("wfRootId", typeof(System.Guid));
    
            var maxCountParameter = maxCount.HasValue ?
                new ObjectParameter("maxCount", maxCount) :
                new ObjectParameter("maxCount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_Act_MarketActivityPullOB", instanceIdParameter, tblNameParameter, wfRootIdParameter, maxCountParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_Act_MarketActivityPullSMS(Nullable<long> instanceId, string tblName, Nullable<System.Guid> wfRootId, string resultType, string conditions, Nullable<int> maxCount)
        {
            var instanceIdParameter = instanceId.HasValue ?
                new ObjectParameter("instanceId", instanceId) :
                new ObjectParameter("instanceId", typeof(long));
    
            var tblNameParameter = tblName != null ?
                new ObjectParameter("tblName", tblName) :
                new ObjectParameter("tblName", typeof(string));
    
            var wfRootIdParameter = wfRootId.HasValue ?
                new ObjectParameter("wfRootId", wfRootId) :
                new ObjectParameter("wfRootId", typeof(System.Guid));
    
            var resultTypeParameter = resultType != null ?
                new ObjectParameter("resultType", resultType) :
                new ObjectParameter("resultType", typeof(string));
    
            var conditionsParameter = conditions != null ?
                new ObjectParameter("conditions", conditions) :
                new ObjectParameter("conditions", typeof(string));
    
            var maxCountParameter = maxCount.HasValue ?
                new ObjectParameter("maxCount", maxCount) :
                new ObjectParameter("maxCount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_Act_MarketActivityPullSMS", instanceIdParameter, tblNameParameter, wfRootIdParameter, resultTypeParameter, conditionsParameter, maxCountParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_Act_MarketActivityPullSurvey(Nullable<long> instanceId, string tblName, Nullable<System.Guid> wfRootId, Nullable<int> maxCount)
        {
            var instanceIdParameter = instanceId.HasValue ?
                new ObjectParameter("instanceId", instanceId) :
                new ObjectParameter("instanceId", typeof(long));
    
            var tblNameParameter = tblName != null ?
                new ObjectParameter("tblName", tblName) :
                new ObjectParameter("tblName", typeof(string));
    
            var wfRootIdParameter = wfRootId.HasValue ?
                new ObjectParameter("wfRootId", wfRootId) :
                new ObjectParameter("wfRootId", typeof(System.Guid));
    
            var maxCountParameter = maxCount.HasValue ?
                new ObjectParameter("maxCount", maxCount) :
                new ObjectParameter("maxCount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_Act_MarketActivityPullSurvey", instanceIdParameter, tblNameParameter, wfRootIdParameter, maxCountParameter);
        }
    
        public virtual int sp_Act_MarketActivityPushEmail(Nullable<long> instanceId, string tblName, Nullable<System.Guid> wfRootId, Nullable<int> templetId, string subjectEmail, string templateEmail, Nullable<int> maxCount)
        {
            var instanceIdParameter = instanceId.HasValue ?
                new ObjectParameter("instanceId", instanceId) :
                new ObjectParameter("instanceId", typeof(long));
    
            var tblNameParameter = tblName != null ?
                new ObjectParameter("tblName", tblName) :
                new ObjectParameter("tblName", typeof(string));
    
            var wfRootIdParameter = wfRootId.HasValue ?
                new ObjectParameter("wfRootId", wfRootId) :
                new ObjectParameter("wfRootId", typeof(System.Guid));
    
            var templetIdParameter = templetId.HasValue ?
                new ObjectParameter("templetId", templetId) :
                new ObjectParameter("templetId", typeof(int));
    
            var subjectEmailParameter = subjectEmail != null ?
                new ObjectParameter("subjectEmail", subjectEmail) :
                new ObjectParameter("subjectEmail", typeof(string));
    
            var templateEmailParameter = templateEmail != null ?
                new ObjectParameter("templateEmail", templateEmail) :
                new ObjectParameter("templateEmail", typeof(string));
    
            var maxCountParameter = maxCount.HasValue ?
                new ObjectParameter("maxCount", maxCount) :
                new ObjectParameter("maxCount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Act_MarketActivityPushEmail", instanceIdParameter, tblNameParameter, wfRootIdParameter, templetIdParameter, subjectEmailParameter, templateEmailParameter, maxCountParameter);
        }
    
        public virtual int sp_Act_MarketActivityPushNormal(string tblName, Nullable<System.Guid> wfRootId, Nullable<int> maxCount)
        {
            var tblNameParameter = tblName != null ?
                new ObjectParameter("tblName", tblName) :
                new ObjectParameter("tblName", typeof(string));
    
            var wfRootIdParameter = wfRootId.HasValue ?
                new ObjectParameter("wfRootId", wfRootId) :
                new ObjectParameter("wfRootId", typeof(System.Guid));
    
            var maxCountParameter = maxCount.HasValue ?
                new ObjectParameter("maxCount", maxCount) :
                new ObjectParameter("maxCount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Act_MarketActivityPushNormal", tblNameParameter, wfRootIdParameter, maxCountParameter);
        }
    
        public virtual int sp_Act_MarketActivityPushOB(Nullable<long> instanceId, string tblName, Nullable<System.Guid> wfRootId, string obContent, Nullable<int> foreignTempletID, Nullable<int> maxCount)
        {
            var instanceIdParameter = instanceId.HasValue ?
                new ObjectParameter("instanceId", instanceId) :
                new ObjectParameter("instanceId", typeof(long));
    
            var tblNameParameter = tblName != null ?
                new ObjectParameter("tblName", tblName) :
                new ObjectParameter("tblName", typeof(string));
    
            var wfRootIdParameter = wfRootId.HasValue ?
                new ObjectParameter("wfRootId", wfRootId) :
                new ObjectParameter("wfRootId", typeof(System.Guid));
    
            var obContentParameter = obContent != null ?
                new ObjectParameter("obContent", obContent) :
                new ObjectParameter("obContent", typeof(string));
    
            var foreignTempletIDParameter = foreignTempletID.HasValue ?
                new ObjectParameter("foreignTempletID", foreignTempletID) :
                new ObjectParameter("foreignTempletID", typeof(int));
    
            var maxCountParameter = maxCount.HasValue ?
                new ObjectParameter("maxCount", maxCount) :
                new ObjectParameter("maxCount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Act_MarketActivityPushOB", instanceIdParameter, tblNameParameter, wfRootIdParameter, obContentParameter, foreignTempletIDParameter, maxCountParameter);
        }
    
        public virtual int sp_Act_MarketActivityPushSMS(Nullable<long> instanceId, string tblName, Nullable<System.Guid> wfRootId, Nullable<int> templetId, string templateSMS, string templatePara, Nullable<int> maxCount)
        {
            var instanceIdParameter = instanceId.HasValue ?
                new ObjectParameter("instanceId", instanceId) :
                new ObjectParameter("instanceId", typeof(long));
    
            var tblNameParameter = tblName != null ?
                new ObjectParameter("tblName", tblName) :
                new ObjectParameter("tblName", typeof(string));
    
            var wfRootIdParameter = wfRootId.HasValue ?
                new ObjectParameter("wfRootId", wfRootId) :
                new ObjectParameter("wfRootId", typeof(System.Guid));
    
            var templetIdParameter = templetId.HasValue ?
                new ObjectParameter("templetId", templetId) :
                new ObjectParameter("templetId", typeof(int));
    
            var templateSMSParameter = templateSMS != null ?
                new ObjectParameter("templateSMS", templateSMS) :
                new ObjectParameter("templateSMS", typeof(string));
    
            var templateParaParameter = templatePara != null ?
                new ObjectParameter("templatePara", templatePara) :
                new ObjectParameter("templatePara", typeof(string));
    
            var maxCountParameter = maxCount.HasValue ?
                new ObjectParameter("maxCount", maxCount) :
                new ObjectParameter("maxCount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Act_MarketActivityPushSMS", instanceIdParameter, tblNameParameter, wfRootIdParameter, templetIdParameter, templateSMSParameter, templateParaParameter, maxCountParameter);
        }
    
        public virtual int sp_Act_MarketActivityPushSurvey(Nullable<long> instanceId, string tblName, Nullable<System.Guid> wfRootId, Nullable<int> templetId, string sendChannel, string question, Nullable<int> maxCount)
        {
            var instanceIdParameter = instanceId.HasValue ?
                new ObjectParameter("instanceId", instanceId) :
                new ObjectParameter("instanceId", typeof(long));
    
            var tblNameParameter = tblName != null ?
                new ObjectParameter("tblName", tblName) :
                new ObjectParameter("tblName", typeof(string));
    
            var wfRootIdParameter = wfRootId.HasValue ?
                new ObjectParameter("wfRootId", wfRootId) :
                new ObjectParameter("wfRootId", typeof(System.Guid));
    
            var templetIdParameter = templetId.HasValue ?
                new ObjectParameter("templetId", templetId) :
                new ObjectParameter("templetId", typeof(int));
    
            var sendChannelParameter = sendChannel != null ?
                new ObjectParameter("sendChannel", sendChannel) :
                new ObjectParameter("sendChannel", typeof(string));
    
            var questionParameter = question != null ?
                new ObjectParameter("question", question) :
                new ObjectParameter("question", typeof(string));
    
            var maxCountParameter = maxCount.HasValue ?
                new ObjectParameter("maxCount", maxCount) :
                new ObjectParameter("maxCount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Act_MarketActivityPushSurvey", instanceIdParameter, tblNameParameter, wfRootIdParameter, templetIdParameter, sendChannelParameter, questionParameter, maxCountParameter);
        }
    
        public virtual ObjectResult<sp_Act_WX_GetActivityList_Result> sp_Act_WX_GetActivityList(Nullable<int> dataGroupId, string memberId)
        {
            var dataGroupIdParameter = dataGroupId.HasValue ?
                new ObjectParameter("dataGroupId", dataGroupId) :
                new ObjectParameter("dataGroupId", typeof(int));
    
            var memberIdParameter = memberId != null ?
                new ObjectParameter("memberId", memberId) :
                new ObjectParameter("memberId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Act_WX_GetActivityList_Result>("sp_Act_WX_GetActivityList", dataGroupIdParameter, memberIdParameter);
        }
    
        public virtual int sp_Act_MarketActivityPushCoupon(Nullable<long> instanceId, string tblName, Nullable<System.Guid> wfRootId, Nullable<int> templetId, Nullable<bool> isSMS, Nullable<bool> isEmail, Nullable<int> maxCount)
        {
            var instanceIdParameter = instanceId.HasValue ?
                new ObjectParameter("instanceId", instanceId) :
                new ObjectParameter("instanceId", typeof(long));
    
            var tblNameParameter = tblName != null ?
                new ObjectParameter("tblName", tblName) :
                new ObjectParameter("tblName", typeof(string));
    
            var wfRootIdParameter = wfRootId.HasValue ?
                new ObjectParameter("wfRootId", wfRootId) :
                new ObjectParameter("wfRootId", typeof(System.Guid));
    
            var templetIdParameter = templetId.HasValue ?
                new ObjectParameter("templetId", templetId) :
                new ObjectParameter("templetId", typeof(int));
    
            var isSMSParameter = isSMS.HasValue ?
                new ObjectParameter("IsSMS", isSMS) :
                new ObjectParameter("IsSMS", typeof(bool));
    
            var isEmailParameter = isEmail.HasValue ?
                new ObjectParameter("IsEmail", isEmail) :
                new ObjectParameter("IsEmail", typeof(bool));
    
            var maxCountParameter = maxCount.HasValue ?
                new ObjectParameter("maxCount", maxCount) :
                new ObjectParameter("maxCount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Act_MarketActivityPushCoupon", instanceIdParameter, tblNameParameter, wfRootIdParameter, templetIdParameter, isSMSParameter, isEmailParameter, maxCountParameter);
        }
    
        public virtual ObjectResult<sp_Act_GetSubdivision_Result> sp_Act_GetSubdivision(Nullable<int> activityID, string activityName, Nullable<bool> enable, Nullable<System.DateTime> planStartDateFrom, Nullable<System.DateTime> planStartDateTo, Nullable<System.DateTime> planEndDateFrom, Nullable<System.DateTime> planEndDateTo, Nullable<int> searchGroupID, string searchStore, Nullable<int> userGroupID, string authStores, string authGroups, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter recordCount)
        {
            var activityIDParameter = activityID.HasValue ?
                new ObjectParameter("ActivityID", activityID) :
                new ObjectParameter("ActivityID", typeof(int));
    
            var activityNameParameter = activityName != null ?
                new ObjectParameter("ActivityName", activityName) :
                new ObjectParameter("ActivityName", typeof(string));
    
            var enableParameter = enable.HasValue ?
                new ObjectParameter("Enable", enable) :
                new ObjectParameter("Enable", typeof(bool));
    
            var planStartDateFromParameter = planStartDateFrom.HasValue ?
                new ObjectParameter("PlanStartDateFrom", planStartDateFrom) :
                new ObjectParameter("PlanStartDateFrom", typeof(System.DateTime));
    
            var planStartDateToParameter = planStartDateTo.HasValue ?
                new ObjectParameter("PlanStartDateTo", planStartDateTo) :
                new ObjectParameter("PlanStartDateTo", typeof(System.DateTime));
    
            var planEndDateFromParameter = planEndDateFrom.HasValue ?
                new ObjectParameter("PlanEndDateFrom", planEndDateFrom) :
                new ObjectParameter("PlanEndDateFrom", typeof(System.DateTime));
    
            var planEndDateToParameter = planEndDateTo.HasValue ?
                new ObjectParameter("PlanEndDateTo", planEndDateTo) :
                new ObjectParameter("PlanEndDateTo", typeof(System.DateTime));
    
            var searchGroupIDParameter = searchGroupID.HasValue ?
                new ObjectParameter("SearchGroupID", searchGroupID) :
                new ObjectParameter("SearchGroupID", typeof(int));
    
            var searchStoreParameter = searchStore != null ?
                new ObjectParameter("SearchStore", searchStore) :
                new ObjectParameter("SearchStore", typeof(string));
    
            var userGroupIDParameter = userGroupID.HasValue ?
                new ObjectParameter("UserGroupID", userGroupID) :
                new ObjectParameter("UserGroupID", typeof(int));
    
            var authStoresParameter = authStores != null ?
                new ObjectParameter("AuthStores", authStores) :
                new ObjectParameter("AuthStores", typeof(string));
    
            var authGroupsParameter = authGroups != null ?
                new ObjectParameter("AuthGroups", authGroups) :
                new ObjectParameter("AuthGroups", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Act_GetSubdivision_Result>("sp_Act_GetSubdivision", activityIDParameter, activityNameParameter, enableParameter, planStartDateFromParameter, planStartDateToParameter, planEndDateFromParameter, planEndDateToParameter, searchGroupIDParameter, searchStoreParameter, userGroupIDParameter, authStoresParameter, authGroupsParameter, pageIndexParameter, pageSizeParameter, recordCount);
        }
    
        public virtual ObjectResult<sp_Rpt_MemContributionRate_Result_Result> sp_Rpt_MemContributionRate_Result(Nullable<System.DateTime> yearDate, Nullable<System.DateTime> endDate)
        {
            var yearDateParameter = yearDate.HasValue ?
                new ObjectParameter("yearDate", yearDate) :
                new ObjectParameter("yearDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Rpt_MemContributionRate_Result_Result>("sp_Rpt_MemContributionRate_Result", yearDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_Act_MarketActivityPullWechat(Nullable<long> instanceId, string tblName, Nullable<System.Guid> wfRootId, Nullable<int> maxCount)
        {
            var instanceIdParameter = instanceId.HasValue ?
                new ObjectParameter("instanceId", instanceId) :
                new ObjectParameter("instanceId", typeof(long));
    
            var tblNameParameter = tblName != null ?
                new ObjectParameter("tblName", tblName) :
                new ObjectParameter("tblName", typeof(string));
    
            var wfRootIdParameter = wfRootId.HasValue ?
                new ObjectParameter("wfRootId", wfRootId) :
                new ObjectParameter("wfRootId", typeof(System.Guid));
    
            var maxCountParameter = maxCount.HasValue ?
                new ObjectParameter("maxCount", maxCount) :
                new ObjectParameter("maxCount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_Act_MarketActivityPullWechat", instanceIdParameter, tblNameParameter, wfRootIdParameter, maxCountParameter);
        }
    
        public virtual int sp_Act_MarketActivityPushWechat(Nullable<long> instanceId, string tblName, Nullable<System.Guid> wfRootId, Nullable<int> templetId, string contentType, string contentPara, Nullable<int> maxCount)
        {
            var instanceIdParameter = instanceId.HasValue ?
                new ObjectParameter("instanceId", instanceId) :
                new ObjectParameter("instanceId", typeof(long));
    
            var tblNameParameter = tblName != null ?
                new ObjectParameter("tblName", tblName) :
                new ObjectParameter("tblName", typeof(string));
    
            var wfRootIdParameter = wfRootId.HasValue ?
                new ObjectParameter("wfRootId", wfRootId) :
                new ObjectParameter("wfRootId", typeof(System.Guid));
    
            var templetIdParameter = templetId.HasValue ?
                new ObjectParameter("templetId", templetId) :
                new ObjectParameter("templetId", typeof(int));
    
            var contentTypeParameter = contentType != null ?
                new ObjectParameter("contentType", contentType) :
                new ObjectParameter("contentType", typeof(string));
    
            var contentParaParameter = contentPara != null ?
                new ObjectParameter("contentPara", contentPara) :
                new ObjectParameter("contentPara", typeof(string));
    
            var maxCountParameter = maxCount.HasValue ?
                new ObjectParameter("maxCount", maxCount) :
                new ObjectParameter("maxCount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Act_MarketActivityPushWechat", instanceIdParameter, tblNameParameter, wfRootIdParameter, templetIdParameter, contentTypeParameter, contentParaParameter, maxCountParameter);
        }
    
        public virtual int sp_CRM_Mem_UpNeedPoint(string memberid, ObjectParameter upneedpoint)
        {
            var memberidParameter = memberid != null ?
                new ObjectParameter("memberid", memberid) :
                new ObjectParameter("memberid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CRM_Mem_UpNeedPoint", memberidParameter, upneedpoint);
        }
    
        public virtual ObjectResult<sp_Rpt_MarketActivityTracking_Result> sp_Rpt_MarketActivityTracking(Nullable<System.DateTime> searchdate, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter recordCount)
        {
            var searchdateParameter = searchdate.HasValue ?
                new ObjectParameter("searchdate", searchdate) :
                new ObjectParameter("searchdate", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Rpt_MarketActivityTracking_Result>("sp_Rpt_MarketActivityTracking", searchdateParameter, pageIndexParameter, pageSizeParameter, recordCount);
        }
    
        public virtual ObjectResult<sp_Rpt_MemMonthConsum_Result> sp_Rpt_MemMonthConsum(Nullable<System.DateTime> dateBegin, Nullable<System.DateTime> dateEnd, string channel, string area, string city, string store, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter recordCount)
        {
            var dateBeginParameter = dateBegin.HasValue ?
                new ObjectParameter("dateBegin", dateBegin) :
                new ObjectParameter("dateBegin", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("dateEnd", dateEnd) :
                new ObjectParameter("dateEnd", typeof(System.DateTime));
    
            var channelParameter = channel != null ?
                new ObjectParameter("channel", channel) :
                new ObjectParameter("channel", typeof(string));
    
            var areaParameter = area != null ?
                new ObjectParameter("area", area) :
                new ObjectParameter("area", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var storeParameter = store != null ?
                new ObjectParameter("store", store) :
                new ObjectParameter("store", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Rpt_MemMonthConsum_Result>("sp_Rpt_MemMonthConsum", dateBeginParameter, dateEndParameter, channelParameter, areaParameter, cityParameter, storeParameter, pageIndexParameter, pageSizeParameter, recordCount);
        }
    
        public virtual ObjectResult<sp_Rpt_Mem_ConsumptionFrequency_Count_Result> sp_Rpt_Mem_ConsumptionFrequency_Count(string channel, string brand, string category, Nullable<System.DateTime> dateConsumptionStart, Nullable<System.DateTime> dateConsumptionEnd)
        {
            var channelParameter = channel != null ?
                new ObjectParameter("channel", channel) :
                new ObjectParameter("channel", typeof(string));
    
            var brandParameter = brand != null ?
                new ObjectParameter("brand", brand) :
                new ObjectParameter("brand", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("category", category) :
                new ObjectParameter("category", typeof(string));
    
            var dateConsumptionStartParameter = dateConsumptionStart.HasValue ?
                new ObjectParameter("dateConsumptionStart", dateConsumptionStart) :
                new ObjectParameter("dateConsumptionStart", typeof(System.DateTime));
    
            var dateConsumptionEndParameter = dateConsumptionEnd.HasValue ?
                new ObjectParameter("dateConsumptionEnd", dateConsumptionEnd) :
                new ObjectParameter("dateConsumptionEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Rpt_Mem_ConsumptionFrequency_Count_Result>("sp_Rpt_Mem_ConsumptionFrequency_Count", channelParameter, brandParameter, categoryParameter, dateConsumptionStartParameter, dateConsumptionEndParameter);
        }
    
        public virtual ObjectResult<sp_Rpt_StoreConsumptionDuty_Count_Result> sp_Rpt_StoreConsumptionDuty_Count(string channel, string area, string city, string store, Nullable<System.DateTime> dateConsumptionStart, Nullable<System.DateTime> dateConsumptionEnd, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter recordCount)
        {
            var channelParameter = channel != null ?
                new ObjectParameter("channel", channel) :
                new ObjectParameter("channel", typeof(string));
    
            var areaParameter = area != null ?
                new ObjectParameter("area", area) :
                new ObjectParameter("area", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var storeParameter = store != null ?
                new ObjectParameter("store", store) :
                new ObjectParameter("store", typeof(string));
    
            var dateConsumptionStartParameter = dateConsumptionStart.HasValue ?
                new ObjectParameter("dateConsumptionStart", dateConsumptionStart) :
                new ObjectParameter("dateConsumptionStart", typeof(System.DateTime));
    
            var dateConsumptionEndParameter = dateConsumptionEnd.HasValue ?
                new ObjectParameter("dateConsumptionEnd", dateConsumptionEnd) :
                new ObjectParameter("dateConsumptionEnd", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Rpt_StoreConsumptionDuty_Count_Result>("sp_Rpt_StoreConsumptionDuty_Count", channelParameter, areaParameter, cityParameter, storeParameter, dateConsumptionStartParameter, dateConsumptionEndParameter, pageIndexParameter, pageSizeParameter, recordCount);
        }
    
        public virtual int sp_Insert_Trade_Info(string add_time, Nullable<int> index)
        {
            var add_timeParameter = add_time != null ?
                new ObjectParameter("add_time", add_time) :
                new ObjectParameter("add_time", typeof(string));
    
            var indexParameter = index.HasValue ?
                new ObjectParameter("index", index) :
                new ObjectParameter("index", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Insert_Trade_Info", add_timeParameter, indexParameter);
        }
    
        public virtual ObjectResult<sp_Rpt_Mem_IssuingConsumption_Result_Result> sp_Rpt_Mem_IssuingConsumption_Result(Nullable<System.DateTime> dateBegin, Nullable<System.DateTime> dateEnd, string channel, string area, string city, string store, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter recordCount)
        {
            var dateBeginParameter = dateBegin.HasValue ?
                new ObjectParameter("dateBegin", dateBegin) :
                new ObjectParameter("dateBegin", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("dateEnd", dateEnd) :
                new ObjectParameter("dateEnd", typeof(System.DateTime));
    
            var channelParameter = channel != null ?
                new ObjectParameter("channel", channel) :
                new ObjectParameter("channel", typeof(string));
    
            var areaParameter = area != null ?
                new ObjectParameter("area", area) :
                new ObjectParameter("area", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var storeParameter = store != null ?
                new ObjectParameter("store", store) :
                new ObjectParameter("store", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Rpt_Mem_IssuingConsumption_Result_Result>("sp_Rpt_Mem_IssuingConsumption_Result", dateBeginParameter, dateEndParameter, channelParameter, areaParameter, cityParameter, storeParameter, pageIndexParameter, pageSizeParameter, recordCount);
        }
    
        public virtual ObjectResult<sp_Rpt_MemUpGrade_Result> sp_Rpt_MemUpGrade(Nullable<System.DateTime> dateBegin, Nullable<System.DateTime> dateEnd, string channel, string area, string city, string store, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter recordCount)
        {
            var dateBeginParameter = dateBegin.HasValue ?
                new ObjectParameter("dateBegin", dateBegin) :
                new ObjectParameter("dateBegin", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("dateEnd", dateEnd) :
                new ObjectParameter("dateEnd", typeof(System.DateTime));
    
            var channelParameter = channel != null ?
                new ObjectParameter("channel", channel) :
                new ObjectParameter("channel", typeof(string));
    
            var areaParameter = area != null ?
                new ObjectParameter("area", area) :
                new ObjectParameter("area", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var storeParameter = store != null ?
                new ObjectParameter("store", store) :
                new ObjectParameter("store", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Rpt_MemUpGrade_Result>("sp_Rpt_MemUpGrade", dateBeginParameter, dateEndParameter, channelParameter, areaParameter, cityParameter, storeParameter, pageIndexParameter, pageSizeParameter, recordCount);
        }
    
        public virtual ObjectResult<sp_Rpt_Mem_MemToNonMemSalesDutyCount_Result> sp_Rpt_Mem_MemToNonMemSalesDutyCount(Nullable<System.DateTime> dateConsumptionStart, Nullable<System.DateTime> dateConsumptionEnd, string customSource)
        {
            var dateConsumptionStartParameter = dateConsumptionStart.HasValue ?
                new ObjectParameter("dateConsumptionStart", dateConsumptionStart) :
                new ObjectParameter("dateConsumptionStart", typeof(System.DateTime));
    
            var dateConsumptionEndParameter = dateConsumptionEnd.HasValue ?
                new ObjectParameter("dateConsumptionEnd", dateConsumptionEnd) :
                new ObjectParameter("dateConsumptionEnd", typeof(System.DateTime));
    
            var customSourceParameter = customSource != null ?
                new ObjectParameter("customSource", customSource) :
                new ObjectParameter("customSource", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Rpt_Mem_MemToNonMemSalesDutyCount_Result>("sp_Rpt_Mem_MemToNonMemSalesDutyCount", dateConsumptionStartParameter, dateConsumptionEndParameter, customSourceParameter);
        }
    
        public virtual ObjectResult<sp_Rpt_Mem_Activitycount_Result> sp_Rpt_Mem_Activitycount(Nullable<System.DateTime> dateBegin2, Nullable<System.DateTime> dateEnd2, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter recordCount)
        {
            var dateBegin2Parameter = dateBegin2.HasValue ?
                new ObjectParameter("dateBegin2", dateBegin2) :
                new ObjectParameter("dateBegin2", typeof(System.DateTime));
    
            var dateEnd2Parameter = dateEnd2.HasValue ?
                new ObjectParameter("dateEnd2", dateEnd2) :
                new ObjectParameter("dateEnd2", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Rpt_Mem_Activitycount_Result>("sp_Rpt_Mem_Activitycount", dateBegin2Parameter, dateEnd2Parameter, pageIndexParameter, pageSizeParameter, recordCount);
        }
    
        public virtual ObjectResult<sp_Rpt_Mem_Count_Result> sp_Rpt_Mem_Count(Nullable<System.DateTime> dateBegin, Nullable<System.DateTime> dateEnd, string channel, string area, string city, string store, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter recordCount)
        {
            var dateBeginParameter = dateBegin.HasValue ?
                new ObjectParameter("dateBegin", dateBegin) :
                new ObjectParameter("dateBegin", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("dateEnd", dateEnd) :
                new ObjectParameter("dateEnd", typeof(System.DateTime));
    
            var channelParameter = channel != null ?
                new ObjectParameter("channel", channel) :
                new ObjectParameter("channel", typeof(string));
    
            var areaParameter = area != null ?
                new ObjectParameter("area", area) :
                new ObjectParameter("area", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var storeParameter = store != null ?
                new ObjectParameter("store", store) :
                new ObjectParameter("store", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Rpt_Mem_Count_Result>("sp_Rpt_Mem_Count", dateBeginParameter, dateEndParameter, channelParameter, areaParameter, cityParameter, storeParameter, pageIndexParameter, pageSizeParameter, recordCount);
        }
    
        public virtual ObjectResult<sp_Rpt_WXSign_Result> sp_Rpt_WXSign(string startDate, string endDate, string actionName, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter recordCount)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var actionNameParameter = actionName != null ?
                new ObjectParameter("ActionName", actionName) :
                new ObjectParameter("ActionName", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Rpt_WXSign_Result>("sp_Rpt_WXSign", startDateParameter, endDateParameter, actionNameParameter, pageIndexParameter, pageSizeParameter, recordCount);
        }
    
        public virtual ObjectResult<sp_Rpt_Prd_WeChatSign_Result> sp_Rpt_Prd_WeChatSign(string dateBegin, string dateEnd, string actionCode, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter recordCount)
        {
            var dateBeginParameter = dateBegin != null ?
                new ObjectParameter("dateBegin", dateBegin) :
                new ObjectParameter("dateBegin", typeof(string));
    
            var dateEndParameter = dateEnd != null ?
                new ObjectParameter("dateEnd", dateEnd) :
                new ObjectParameter("dateEnd", typeof(string));
    
            var actionCodeParameter = actionCode != null ?
                new ObjectParameter("ActionCode", actionCode) :
                new ObjectParameter("ActionCode", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Rpt_Prd_WeChatSign_Result>("sp_Rpt_Prd_WeChatSign", dateBeginParameter, dateEndParameter, actionCodeParameter, pageIndexParameter, pageSizeParameter, recordCount);
        }
    
        public virtual ObjectResult<sp_CRM_Mem_Search_Result> sp_CRM_Mem_Search(Nullable<int> dataGroupId, string pageIds, string dataRoleIds, string memberNo, string customerName, string customerMobile, string customerLevel, string registerStoreCode, string regStoreArea, string regStoreChan, Nullable<decimal> consumeAmountStart, Nullable<decimal> consumeAmountEnd, Nullable<decimal> consumePointStart, Nullable<decimal> consumePointEnd, string membercode, string customerSource, string registerDateStart, string registerDateEnd, string orderBy, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter recordCount)
        {
            var dataGroupIdParameter = dataGroupId.HasValue ?
                new ObjectParameter("dataGroupId", dataGroupId) :
                new ObjectParameter("dataGroupId", typeof(int));
    
            var pageIdsParameter = pageIds != null ?
                new ObjectParameter("pageIds", pageIds) :
                new ObjectParameter("pageIds", typeof(string));
    
            var dataRoleIdsParameter = dataRoleIds != null ?
                new ObjectParameter("dataRoleIds", dataRoleIds) :
                new ObjectParameter("dataRoleIds", typeof(string));
    
            var memberNoParameter = memberNo != null ?
                new ObjectParameter("memberNo", memberNo) :
                new ObjectParameter("memberNo", typeof(string));
    
            var customerNameParameter = customerName != null ?
                new ObjectParameter("customerName", customerName) :
                new ObjectParameter("customerName", typeof(string));
    
            var customerMobileParameter = customerMobile != null ?
                new ObjectParameter("customerMobile", customerMobile) :
                new ObjectParameter("customerMobile", typeof(string));
    
            var customerLevelParameter = customerLevel != null ?
                new ObjectParameter("customerLevel", customerLevel) :
                new ObjectParameter("customerLevel", typeof(string));
    
            var registerStoreCodeParameter = registerStoreCode != null ?
                new ObjectParameter("RegisterStoreCode", registerStoreCode) :
                new ObjectParameter("RegisterStoreCode", typeof(string));
    
            var regStoreAreaParameter = regStoreArea != null ?
                new ObjectParameter("RegStoreArea", regStoreArea) :
                new ObjectParameter("RegStoreArea", typeof(string));
    
            var regStoreChanParameter = regStoreChan != null ?
                new ObjectParameter("RegStoreChan", regStoreChan) :
                new ObjectParameter("RegStoreChan", typeof(string));
    
            var consumeAmountStartParameter = consumeAmountStart.HasValue ?
                new ObjectParameter("ConsumeAmountStart", consumeAmountStart) :
                new ObjectParameter("ConsumeAmountStart", typeof(decimal));
    
            var consumeAmountEndParameter = consumeAmountEnd.HasValue ?
                new ObjectParameter("ConsumeAmountEnd", consumeAmountEnd) :
                new ObjectParameter("ConsumeAmountEnd", typeof(decimal));
    
            var consumePointStartParameter = consumePointStart.HasValue ?
                new ObjectParameter("ConsumePointStart", consumePointStart) :
                new ObjectParameter("ConsumePointStart", typeof(decimal));
    
            var consumePointEndParameter = consumePointEnd.HasValue ?
                new ObjectParameter("ConsumePointEnd", consumePointEnd) :
                new ObjectParameter("ConsumePointEnd", typeof(decimal));
    
            var membercodeParameter = membercode != null ?
                new ObjectParameter("membercode", membercode) :
                new ObjectParameter("membercode", typeof(string));
    
            var customerSourceParameter = customerSource != null ?
                new ObjectParameter("CustomerSource", customerSource) :
                new ObjectParameter("CustomerSource", typeof(string));
    
            var registerDateStartParameter = registerDateStart != null ?
                new ObjectParameter("RegisterDateStart", registerDateStart) :
                new ObjectParameter("RegisterDateStart", typeof(string));
    
            var registerDateEndParameter = registerDateEnd != null ?
                new ObjectParameter("RegisterDateEnd", registerDateEnd) :
                new ObjectParameter("RegisterDateEnd", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CRM_Mem_Search_Result>("sp_CRM_Mem_Search", dataGroupIdParameter, pageIdsParameter, dataRoleIdsParameter, memberNoParameter, customerNameParameter, customerMobileParameter, customerLevelParameter, registerStoreCodeParameter, regStoreAreaParameter, regStoreChanParameter, consumeAmountStartParameter, consumeAmountEndParameter, consumePointStartParameter, consumePointEndParameter, membercodeParameter, customerSourceParameter, registerDateStartParameter, registerDateEndParameter, orderByParameter, pageIndexParameter, pageSizeParameter, recordCount);
        }
    
        public virtual ObjectResult<sp_Rpt_Mem_Recruit_Count_Result> sp_Rpt_Mem_Recruit_Count(string dateRegType, Nullable<System.DateTime> dateRegDate, string channel, string area, string city, string store, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter recordCount)
        {
            var dateRegTypeParameter = dateRegType != null ?
                new ObjectParameter("dateRegType", dateRegType) :
                new ObjectParameter("dateRegType", typeof(string));
    
            var dateRegDateParameter = dateRegDate.HasValue ?
                new ObjectParameter("dateRegDate", dateRegDate) :
                new ObjectParameter("dateRegDate", typeof(System.DateTime));
    
            var channelParameter = channel != null ?
                new ObjectParameter("channel", channel) :
                new ObjectParameter("channel", typeof(string));
    
            var areaParameter = area != null ?
                new ObjectParameter("area", area) :
                new ObjectParameter("area", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var storeParameter = store != null ?
                new ObjectParameter("store", store) :
                new ObjectParameter("store", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Rpt_Mem_Recruit_Count_Result>("sp_Rpt_Mem_Recruit_Count", dateRegTypeParameter, dateRegDateParameter, channelParameter, areaParameter, cityParameter, storeParameter, pageIndexParameter, pageSizeParameter, recordCount);
        }
    
        public virtual ObjectResult<sp_Rpt_StoreConsumptionMonthly_Count_Result> sp_Rpt_StoreConsumptionMonthly_Count(string channel, string area, string city, string store, Nullable<System.DateTime> consumptiondateStart, Nullable<System.DateTime> consumptiondateEnd, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter recordCount)
        {
            var channelParameter = channel != null ?
                new ObjectParameter("channel", channel) :
                new ObjectParameter("channel", typeof(string));
    
            var areaParameter = area != null ?
                new ObjectParameter("area", area) :
                new ObjectParameter("area", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var storeParameter = store != null ?
                new ObjectParameter("store", store) :
                new ObjectParameter("store", typeof(string));
    
            var consumptiondateStartParameter = consumptiondateStart.HasValue ?
                new ObjectParameter("consumptiondateStart", consumptiondateStart) :
                new ObjectParameter("consumptiondateStart", typeof(System.DateTime));
    
            var consumptiondateEndParameter = consumptiondateEnd.HasValue ?
                new ObjectParameter("consumptiondateEnd", consumptiondateEnd) :
                new ObjectParameter("consumptiondateEnd", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Rpt_StoreConsumptionMonthly_Count_Result>("sp_Rpt_StoreConsumptionMonthly_Count", channelParameter, areaParameter, cityParameter, storeParameter, consumptiondateStartParameter, consumptiondateEndParameter, pageIndexParameter, pageSizeParameter, recordCount);
        }
    
        public virtual ObjectResult<sp_Rpt_MemRepeatedConsumption_Result_Result> sp_Rpt_MemRepeatedConsumption_Result(Nullable<System.DateTime> dateBegin, Nullable<System.DateTime> dateEnd, string channel, string area, string city, string store, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter recordCount)
        {
            var dateBeginParameter = dateBegin.HasValue ?
                new ObjectParameter("dateBegin", dateBegin) :
                new ObjectParameter("dateBegin", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("dateEnd", dateEnd) :
                new ObjectParameter("dateEnd", typeof(System.DateTime));
    
            var channelParameter = channel != null ?
                new ObjectParameter("channel", channel) :
                new ObjectParameter("channel", typeof(string));
    
            var areaParameter = area != null ?
                new ObjectParameter("area", area) :
                new ObjectParameter("area", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var storeParameter = store != null ?
                new ObjectParameter("store", store) :
                new ObjectParameter("store", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Rpt_MemRepeatedConsumption_Result_Result>("sp_Rpt_MemRepeatedConsumption_Result", dateBeginParameter, dateEndParameter, channelParameter, areaParameter, cityParameter, storeParameter, pageIndexParameter, pageSizeParameter, recordCount);
        }
    
        public virtual ObjectResult<sp_Rpt_Mem_ConsumerDetails_Result> sp_Rpt_Mem_ConsumerDetails(string channel, string area, string city, string store, Nullable<System.DateTime> dateConsumptionStart, Nullable<System.DateTime> dateConsumptionEnd, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter recordCount)
        {
            var channelParameter = channel != null ?
                new ObjectParameter("channel", channel) :
                new ObjectParameter("channel", typeof(string));
    
            var areaParameter = area != null ?
                new ObjectParameter("area", area) :
                new ObjectParameter("area", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var storeParameter = store != null ?
                new ObjectParameter("store", store) :
                new ObjectParameter("store", typeof(string));
    
            var dateConsumptionStartParameter = dateConsumptionStart.HasValue ?
                new ObjectParameter("dateConsumptionStart", dateConsumptionStart) :
                new ObjectParameter("dateConsumptionStart", typeof(System.DateTime));
    
            var dateConsumptionEndParameter = dateConsumptionEnd.HasValue ?
                new ObjectParameter("dateConsumptionEnd", dateConsumptionEnd) :
                new ObjectParameter("dateConsumptionEnd", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Rpt_Mem_ConsumerDetails_Result>("sp_Rpt_Mem_ConsumerDetails", channelParameter, areaParameter, cityParameter, storeParameter, dateConsumptionStartParameter, dateConsumptionEndParameter, pageIndexParameter, pageSizeParameter, recordCount);
        }
    
        public virtual ObjectResult<sp_Rpt_UseCoupon_Count_Result> sp_Rpt_UseCoupon_Count(string area, string city, string store, string couponname, Nullable<System.DateTime> datesendcouponStart, Nullable<System.DateTime> datesendcouponEnd, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter recordCount)
        {
            var areaParameter = area != null ?
                new ObjectParameter("area", area) :
                new ObjectParameter("area", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var storeParameter = store != null ?
                new ObjectParameter("store", store) :
                new ObjectParameter("store", typeof(string));
    
            var couponnameParameter = couponname != null ?
                new ObjectParameter("couponname", couponname) :
                new ObjectParameter("couponname", typeof(string));
    
            var datesendcouponStartParameter = datesendcouponStart.HasValue ?
                new ObjectParameter("datesendcouponStart", datesendcouponStart) :
                new ObjectParameter("datesendcouponStart", typeof(System.DateTime));
    
            var datesendcouponEndParameter = datesendcouponEnd.HasValue ?
                new ObjectParameter("datesendcouponEnd", datesendcouponEnd) :
                new ObjectParameter("datesendcouponEnd", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Rpt_UseCoupon_Count_Result>("sp_Rpt_UseCoupon_Count", areaParameter, cityParameter, storeParameter, couponnameParameter, datesendcouponStartParameter, datesendcouponEndParameter, pageIndexParameter, pageSizeParameter, recordCount);
        }
    
        public virtual ObjectResult<sp_Rpt_PriceSegmentDistributionOffline_Result_Result> sp_Rpt_PriceSegmentDistributionOffline_Result(Nullable<System.DateTime> dateBegin, Nullable<System.DateTime> dateEnd, string channel, string area, string city, string store)
        {
            var dateBeginParameter = dateBegin.HasValue ?
                new ObjectParameter("dateBegin", dateBegin) :
                new ObjectParameter("dateBegin", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("dateEnd", dateEnd) :
                new ObjectParameter("dateEnd", typeof(System.DateTime));
    
            var channelParameter = channel != null ?
                new ObjectParameter("channel", channel) :
                new ObjectParameter("channel", typeof(string));
    
            var areaParameter = area != null ?
                new ObjectParameter("area", area) :
                new ObjectParameter("area", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var storeParameter = store != null ?
                new ObjectParameter("store", store) :
                new ObjectParameter("store", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Rpt_PriceSegmentDistributionOffline_Result_Result>("sp_Rpt_PriceSegmentDistributionOffline_Result", dateBeginParameter, dateEndParameter, channelParameter, areaParameter, cityParameter, storeParameter);
        }
    
        public virtual ObjectResult<sp_Rpt_CouponDetail_Result> sp_Rpt_CouponDetail(string area, string city, string store, string grade, string channel, Nullable<System.DateTime> datesendcouponStart, Nullable<System.DateTime> datesendcouponEnd, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter recordCount)
        {
            var areaParameter = area != null ?
                new ObjectParameter("area", area) :
                new ObjectParameter("area", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var storeParameter = store != null ?
                new ObjectParameter("store", store) :
                new ObjectParameter("store", typeof(string));
    
            var gradeParameter = grade != null ?
                new ObjectParameter("grade", grade) :
                new ObjectParameter("grade", typeof(string));
    
            var channelParameter = channel != null ?
                new ObjectParameter("channel", channel) :
                new ObjectParameter("channel", typeof(string));
    
            var datesendcouponStartParameter = datesendcouponStart.HasValue ?
                new ObjectParameter("datesendcouponStart", datesendcouponStart) :
                new ObjectParameter("datesendcouponStart", typeof(System.DateTime));
    
            var datesendcouponEndParameter = datesendcouponEnd.HasValue ?
                new ObjectParameter("datesendcouponEnd", datesendcouponEnd) :
                new ObjectParameter("datesendcouponEnd", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Rpt_CouponDetail_Result>("sp_Rpt_CouponDetail", areaParameter, cityParameter, storeParameter, gradeParameter, channelParameter, datesendcouponStartParameter, datesendcouponEndParameter, pageIndexParameter, pageSizeParameter, recordCount);
        }
    
        public virtual ObjectResult<sp_Rpt_MarketActivityDetail_Result> sp_Rpt_MarketActivityDetail(string area, string city, string store, string channel, Nullable<System.DateTime> marStarttime, Nullable<System.DateTime> marEndtime, Nullable<System.DateTime> comStarttime, Nullable<System.DateTime> comEndtime, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter recordCount)
        {
            var areaParameter = area != null ?
                new ObjectParameter("area", area) :
                new ObjectParameter("area", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var storeParameter = store != null ?
                new ObjectParameter("store", store) :
                new ObjectParameter("store", typeof(string));
    
            var channelParameter = channel != null ?
                new ObjectParameter("channel", channel) :
                new ObjectParameter("channel", typeof(string));
    
            var marStarttimeParameter = marStarttime.HasValue ?
                new ObjectParameter("marStarttime", marStarttime) :
                new ObjectParameter("marStarttime", typeof(System.DateTime));
    
            var marEndtimeParameter = marEndtime.HasValue ?
                new ObjectParameter("marEndtime", marEndtime) :
                new ObjectParameter("marEndtime", typeof(System.DateTime));
    
            var comStarttimeParameter = comStarttime.HasValue ?
                new ObjectParameter("comStarttime", comStarttime) :
                new ObjectParameter("comStarttime", typeof(System.DateTime));
    
            var comEndtimeParameter = comEndtime.HasValue ?
                new ObjectParameter("comEndtime", comEndtime) :
                new ObjectParameter("comEndtime", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Rpt_MarketActivityDetail_Result>("sp_Rpt_MarketActivityDetail", areaParameter, cityParameter, storeParameter, channelParameter, marStarttimeParameter, marEndtimeParameter, comStarttimeParameter, comEndtimeParameter, pageIndexParameter, pageSizeParameter, recordCount);
        }
    
        public virtual ObjectResult<sp_Rpt_ActIntance_Count_Result> sp_Rpt_ActIntance_Count(string area, string city, string store, string channel, Nullable<System.DateTime> dateActStart, Nullable<System.DateTime> dateActEnd, Nullable<System.DateTime> dateConsumeStart, Nullable<System.DateTime> dateConsumeEnd, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter recordCount)
        {
            var areaParameter = area != null ?
                new ObjectParameter("area", area) :
                new ObjectParameter("area", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var storeParameter = store != null ?
                new ObjectParameter("store", store) :
                new ObjectParameter("store", typeof(string));
    
            var channelParameter = channel != null ?
                new ObjectParameter("channel", channel) :
                new ObjectParameter("channel", typeof(string));
    
            var dateActStartParameter = dateActStart.HasValue ?
                new ObjectParameter("dateActStart", dateActStart) :
                new ObjectParameter("dateActStart", typeof(System.DateTime));
    
            var dateActEndParameter = dateActEnd.HasValue ?
                new ObjectParameter("dateActEnd", dateActEnd) :
                new ObjectParameter("dateActEnd", typeof(System.DateTime));
    
            var dateConsumeStartParameter = dateConsumeStart.HasValue ?
                new ObjectParameter("dateConsumeStart", dateConsumeStart) :
                new ObjectParameter("dateConsumeStart", typeof(System.DateTime));
    
            var dateConsumeEndParameter = dateConsumeEnd.HasValue ?
                new ObjectParameter("dateConsumeEnd", dateConsumeEnd) :
                new ObjectParameter("dateConsumeEnd", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Rpt_ActIntance_Count_Result>("sp_Rpt_ActIntance_Count", areaParameter, cityParameter, storeParameter, channelParameter, dateActStartParameter, dateActEndParameter, dateConsumeStartParameter, dateConsumeEndParameter, pageIndexParameter, pageSizeParameter, recordCount);
        }
    
        public virtual ObjectResult<sp_Rpt_UsedCoupon_Detail_Result> sp_Rpt_UsedCoupon_Detail(string area, string city, string store, string channel, string memlevel, Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter recordCount)
        {
            var areaParameter = area != null ?
                new ObjectParameter("area", area) :
                new ObjectParameter("area", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var storeParameter = store != null ?
                new ObjectParameter("store", store) :
                new ObjectParameter("store", typeof(string));
    
            var channelParameter = channel != null ?
                new ObjectParameter("channel", channel) :
                new ObjectParameter("channel", typeof(string));
    
            var memlevelParameter = memlevel != null ?
                new ObjectParameter("memlevel", memlevel) :
                new ObjectParameter("memlevel", typeof(string));
    
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("dateStart", dateStart) :
                new ObjectParameter("dateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("dateEnd", dateEnd) :
                new ObjectParameter("dateEnd", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Rpt_UsedCoupon_Detail_Result>("sp_Rpt_UsedCoupon_Detail", areaParameter, cityParameter, storeParameter, channelParameter, memlevelParameter, dateStartParameter, dateEndParameter, pageIndexParameter, pageSizeParameter, recordCount);
        }
    
        public virtual ObjectResult<sp_Rpt_Mem_ContributionRate_Statistics_Result> sp_Rpt_Mem_ContributionRate_Statistics(Nullable<System.DateTime> datetime_year, Nullable<System.DateTime> datetime_month)
        {
            var datetime_yearParameter = datetime_year.HasValue ?
                new ObjectParameter("datetime_year", datetime_year) :
                new ObjectParameter("datetime_year", typeof(System.DateTime));
    
            var datetime_monthParameter = datetime_month.HasValue ?
                new ObjectParameter("datetime_month", datetime_month) :
                new ObjectParameter("datetime_month", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Rpt_Mem_ContributionRate_Statistics_Result>("sp_Rpt_Mem_ContributionRate_Statistics", datetime_yearParameter, datetime_monthParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_Act_MarketActivityPushCoupon_Gen(Nullable<int> templetId, Nullable<int> dataGroupID, Nullable<System.DateTime> couponStart, Nullable<System.DateTime> couponEnd, string templateSMS, Nullable<int> maxCount, string couponName)
        {
            var templetIdParameter = templetId.HasValue ?
                new ObjectParameter("templetId", templetId) :
                new ObjectParameter("templetId", typeof(int));
    
            var dataGroupIDParameter = dataGroupID.HasValue ?
                new ObjectParameter("dataGroupID", dataGroupID) :
                new ObjectParameter("dataGroupID", typeof(int));
    
            var couponStartParameter = couponStart.HasValue ?
                new ObjectParameter("couponStart", couponStart) :
                new ObjectParameter("couponStart", typeof(System.DateTime));
    
            var couponEndParameter = couponEnd.HasValue ?
                new ObjectParameter("couponEnd", couponEnd) :
                new ObjectParameter("couponEnd", typeof(System.DateTime));
    
            var templateSMSParameter = templateSMS != null ?
                new ObjectParameter("templateSMS", templateSMS) :
                new ObjectParameter("templateSMS", typeof(string));
    
            var maxCountParameter = maxCount.HasValue ?
                new ObjectParameter("maxCount", maxCount) :
                new ObjectParameter("maxCount", typeof(int));
    
            var couponNameParameter = couponName != null ?
                new ObjectParameter("couponName", couponName) :
                new ObjectParameter("couponName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_Act_MarketActivityPushCoupon_Gen", templetIdParameter, dataGroupIDParameter, couponStartParameter, couponEndParameter, templateSMSParameter, maxCountParameter, couponNameParameter);
        }
    
        public virtual ObjectResult<sp_Rpt_Mem_GoldCoinShareDetail_Result> sp_Rpt_Mem_GoldCoinShareDetail(string store, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter recordCount)
        {
            var storeParameter = store != null ?
                new ObjectParameter("store", store) :
                new ObjectParameter("store", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Rpt_Mem_GoldCoinShareDetail_Result>("sp_Rpt_Mem_GoldCoinShareDetail", storeParameter, pageIndexParameter, pageSizeParameter, recordCount);
        }
    
        public virtual ObjectResult<sp_Rpt_DiscountRate_Result> sp_Rpt_DiscountRate(Nullable<System.DateTime> dateBegin, Nullable<System.DateTime> dateEnd)
        {
            var dateBeginParameter = dateBegin.HasValue ?
                new ObjectParameter("dateBegin", dateBegin) :
                new ObjectParameter("dateBegin", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("dateEnd", dateEnd) :
                new ObjectParameter("dateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Rpt_DiscountRate_Result>("sp_Rpt_DiscountRate", dateBeginParameter, dateEndParameter);
        }
    
        public virtual ObjectResult<sp_Rpt_FirstConsumptionProportion_Result> sp_Rpt_FirstConsumptionProportion(string groupID, string mobile, Nullable<System.DateTime> dateBegin, Nullable<System.DateTime> dateEnd)
        {
            var groupIDParameter = groupID != null ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var dateBeginParameter = dateBegin.HasValue ?
                new ObjectParameter("dateBegin", dateBegin) :
                new ObjectParameter("dateBegin", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("dateEnd", dateEnd) :
                new ObjectParameter("dateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Rpt_FirstConsumptionProportion_Result>("sp_Rpt_FirstConsumptionProportion", groupIDParameter, mobileParameter, dateBeginParameter, dateEndParameter);
        }
    
        public virtual ObjectResult<sp_Rpt_CustomerLostRate_Result> sp_Rpt_CustomerLostRate(Nullable<System.DateTime> year, string mobile, string storeID)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(System.DateTime));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var storeIDParameter = storeID != null ?
                new ObjectParameter("StoreID", storeID) :
                new ObjectParameter("StoreID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Rpt_CustomerLostRate_Result>("sp_Rpt_CustomerLostRate", yearParameter, mobileParameter, storeIDParameter);
        }
    
        public virtual ObjectResult<sp_Rpt_MachineOilCarryRate_Result> sp_Rpt_MachineOilCarryRate(Nullable<System.DateTime> starDate, Nullable<System.DateTime> endDate, string mobile, string storeID)
        {
            var starDateParameter = starDate.HasValue ?
                new ObjectParameter("StarDate", starDate) :
                new ObjectParameter("StarDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var storeIDParameter = storeID != null ?
                new ObjectParameter("StoreID", storeID) :
                new ObjectParameter("StoreID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Rpt_MachineOilCarryRate_Result>("sp_Rpt_MachineOilCarryRate", starDateParameter, endDateParameter, mobileParameter, storeIDParameter);
        }
    
        public virtual ObjectResult<sp_Rpt_ServiceIncomeCount_Result> sp_Rpt_ServiceIncomeCount(Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter recordCount)
        {
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Rpt_ServiceIncomeCount_Result>("sp_Rpt_ServiceIncomeCount", pageIndexParameter, pageSizeParameter, recordCount);
        }
    
        public virtual int sp_Loy_DeductMemGoldCoinSingle(string memberID, string accountType, Nullable<decimal> tradeAmount, string tradeID, string limitJson, string sort, string accountChangeType)
        {
            var memberIDParameter = memberID != null ?
                new ObjectParameter("MemberID", memberID) :
                new ObjectParameter("MemberID", typeof(string));
    
            var accountTypeParameter = accountType != null ?
                new ObjectParameter("AccountType", accountType) :
                new ObjectParameter("AccountType", typeof(string));
    
            var tradeAmountParameter = tradeAmount.HasValue ?
                new ObjectParameter("TradeAmount", tradeAmount) :
                new ObjectParameter("TradeAmount", typeof(decimal));
    
            var tradeIDParameter = tradeID != null ?
                new ObjectParameter("TradeID", tradeID) :
                new ObjectParameter("TradeID", typeof(string));
    
            var limitJsonParameter = limitJson != null ?
                new ObjectParameter("LimitJson", limitJson) :
                new ObjectParameter("LimitJson", typeof(string));
    
            var sortParameter = sort != null ?
                new ObjectParameter("Sort", sort) :
                new ObjectParameter("Sort", typeof(string));
    
            var accountChangeTypeParameter = accountChangeType != null ?
                new ObjectParameter("AccountChangeType", accountChangeType) :
                new ObjectParameter("AccountChangeType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Loy_DeductMemGoldCoinSingle", memberIDParameter, accountTypeParameter, tradeAmountParameter, tradeIDParameter, limitJsonParameter, sortParameter, accountChangeTypeParameter);
        }
    
        public virtual int sp_Loy_IsEnableDeductMemGoldCoin(string memberID, string accountType, Nullable<decimal> tradeAmount, string limitJson, ObjectParameter isEnable)
        {
            var memberIDParameter = memberID != null ?
                new ObjectParameter("MemberID", memberID) :
                new ObjectParameter("MemberID", typeof(string));
    
            var accountTypeParameter = accountType != null ?
                new ObjectParameter("AccountType", accountType) :
                new ObjectParameter("AccountType", typeof(string));
    
            var tradeAmountParameter = tradeAmount.HasValue ?
                new ObjectParameter("TradeAmount", tradeAmount) :
                new ObjectParameter("TradeAmount", typeof(decimal));
    
            var limitJsonParameter = limitJson != null ?
                new ObjectParameter("LimitJson", limitJson) :
                new ObjectParameter("LimitJson", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Loy_IsEnableDeductMemGoldCoin", memberIDParameter, accountTypeParameter, tradeAmountParameter, limitJsonParameter, isEnable);
        }
    
        public virtual ObjectResult<sp_Rpt_RenewalInsuranceRate_Result> sp_Rpt_RenewalInsuranceRate(Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter recordCount)
        {
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Rpt_RenewalInsuranceRate_Result>("sp_Rpt_RenewalInsuranceRate", pageIndexParameter, pageSizeParameter, recordCount);
        }
    
        public virtual int sp_CRM_MemberCardCreate(Nullable<int> memberCardNum, string provinceCode, ObjectParameter memberCardStart, ObjectParameter memberCardEnd)
        {
            var memberCardNumParameter = memberCardNum.HasValue ?
                new ObjectParameter("MemberCardNum", memberCardNum) :
                new ObjectParameter("MemberCardNum", typeof(int));
    
            var provinceCodeParameter = provinceCode != null ?
                new ObjectParameter("ProvinceCode", provinceCode) :
                new ObjectParameter("ProvinceCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CRM_MemberCardCreate", memberCardNumParameter, provinceCodeParameter, memberCardStart, memberCardEnd);
        }
    
        public virtual int sp_CRM_MemberCreateCardIsUsable(Nullable<int> memberCardNum, string provinceCode, Nullable<long> memberCardStart, ObjectParameter memberCardEnd)
        {
            var memberCardNumParameter = memberCardNum.HasValue ?
                new ObjectParameter("MemberCardNum", memberCardNum) :
                new ObjectParameter("MemberCardNum", typeof(int));
    
            var provinceCodeParameter = provinceCode != null ?
                new ObjectParameter("ProvinceCode", provinceCode) :
                new ObjectParameter("ProvinceCode", typeof(string));
    
            var memberCardStartParameter = memberCardStart.HasValue ?
                new ObjectParameter("MemberCardStart", memberCardStart) :
                new ObjectParameter("MemberCardStart", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CRM_MemberCreateCardIsUsable", memberCardNumParameter, provinceCodeParameter, memberCardStartParameter, memberCardEnd);
        }
    
        public virtual int sp_CRM_MemberMadeCardIsUsable(Nullable<int> memberCardNum, string provinceCode, Nullable<long> memberCardStart, ObjectParameter memberCardEnd)
        {
            var memberCardNumParameter = memberCardNum.HasValue ?
                new ObjectParameter("MemberCardNum", memberCardNum) :
                new ObjectParameter("MemberCardNum", typeof(int));
    
            var provinceCodeParameter = provinceCode != null ?
                new ObjectParameter("ProvinceCode", provinceCode) :
                new ObjectParameter("ProvinceCode", typeof(string));
    
            var memberCardStartParameter = memberCardStart.HasValue ?
                new ObjectParameter("MemberCardStart", memberCardStart) :
                new ObjectParameter("MemberCardStart", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CRM_MemberMadeCardIsUsable", memberCardNumParameter, provinceCodeParameter, memberCardStartParameter, memberCardEnd);
        }
    
        public virtual int sp_CRM_MemberRetrieveCardIsUsable(Nullable<int> memberCardNum, string provinceCode, Nullable<long> memberCardStart, ObjectParameter memberCardEnd)
        {
            var memberCardNumParameter = memberCardNum.HasValue ?
                new ObjectParameter("MemberCardNum", memberCardNum) :
                new ObjectParameter("MemberCardNum", typeof(int));
    
            var provinceCodeParameter = provinceCode != null ?
                new ObjectParameter("ProvinceCode", provinceCode) :
                new ObjectParameter("ProvinceCode", typeof(string));
    
            var memberCardStartParameter = memberCardStart.HasValue ?
                new ObjectParameter("MemberCardStart", memberCardStart) :
                new ObjectParameter("MemberCardStart", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CRM_MemberRetrieveCardIsUsable", memberCardNumParameter, provinceCodeParameter, memberCardStartParameter, memberCardEnd);
        }
    
        public virtual int sp_CRM_BoxNoCreate(string provinceCode, Nullable<long> memberCardStart, Nullable<long> memberCardEnd, string boxBatchNo, string discardNum)
        {
            var provinceCodeParameter = provinceCode != null ?
                new ObjectParameter("ProvinceCode", provinceCode) :
                new ObjectParameter("ProvinceCode", typeof(string));
    
            var memberCardStartParameter = memberCardStart.HasValue ?
                new ObjectParameter("MemberCardStart", memberCardStart) :
                new ObjectParameter("MemberCardStart", typeof(long));
    
            var memberCardEndParameter = memberCardEnd.HasValue ?
                new ObjectParameter("MemberCardEnd", memberCardEnd) :
                new ObjectParameter("MemberCardEnd", typeof(long));
    
            var boxBatchNoParameter = boxBatchNo != null ?
                new ObjectParameter("BoxBatchNo", boxBatchNo) :
                new ObjectParameter("BoxBatchNo", typeof(string));
    
            var discardNumParameter = discardNum != null ?
                new ObjectParameter("DiscardNum", discardNum) :
                new ObjectParameter("DiscardNum", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CRM_BoxNoCreate", provinceCodeParameter, memberCardStartParameter, memberCardEndParameter, boxBatchNoParameter, discardNumParameter);
        }
    
        public virtual int sp_CRM_BoxNoCreateIsUsable(Nullable<int> memberCardNum, string provinceCode, Nullable<long> memberCardStart, Nullable<long> memberCardEnd, ObjectParameter isEnable)
        {
            var memberCardNumParameter = memberCardNum.HasValue ?
                new ObjectParameter("MemberCardNum", memberCardNum) :
                new ObjectParameter("MemberCardNum", typeof(int));
    
            var provinceCodeParameter = provinceCode != null ?
                new ObjectParameter("ProvinceCode", provinceCode) :
                new ObjectParameter("ProvinceCode", typeof(string));
    
            var memberCardStartParameter = memberCardStart.HasValue ?
                new ObjectParameter("MemberCardStart", memberCardStart) :
                new ObjectParameter("MemberCardStart", typeof(long));
    
            var memberCardEndParameter = memberCardEnd.HasValue ?
                new ObjectParameter("MemberCardEnd", memberCardEnd) :
                new ObjectParameter("MemberCardEnd", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CRM_BoxNoCreateIsUsable", memberCardNumParameter, provinceCodeParameter, memberCardStartParameter, memberCardEndParameter, isEnable);
        }
    
        public virtual int sp_CRM_ECMemberCardCreate(ObjectParameter memberCardNo)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CRM_ECMemberCardCreate", memberCardNo);
        }
    
        public virtual int sp_CRM_MemberCardNoInsert(Nullable<int> memberCardNum, string provinceCode, Nullable<long> memberCardStart, Nullable<long> memberCardEnd, string batchNo)
        {
            var memberCardNumParameter = memberCardNum.HasValue ?
                new ObjectParameter("MemberCardNum", memberCardNum) :
                new ObjectParameter("MemberCardNum", typeof(int));
    
            var provinceCodeParameter = provinceCode != null ?
                new ObjectParameter("ProvinceCode", provinceCode) :
                new ObjectParameter("ProvinceCode", typeof(string));
    
            var memberCardStartParameter = memberCardStart.HasValue ?
                new ObjectParameter("MemberCardStart", memberCardStart) :
                new ObjectParameter("MemberCardStart", typeof(long));
    
            var memberCardEndParameter = memberCardEnd.HasValue ?
                new ObjectParameter("MemberCardEnd", memberCardEnd) :
                new ObjectParameter("MemberCardEnd", typeof(long));
    
            var batchNoParameter = batchNo != null ?
                new ObjectParameter("BatchNo", batchNo) :
                new ObjectParameter("BatchNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CRM_MemberCardNoInsert", memberCardNumParameter, provinceCodeParameter, memberCardStartParameter, memberCardEndParameter, batchNoParameter);
        }
    
        public virtual ObjectResult<string> sp_CRM_ETLBillToPMS(string billID)
        {
            var billIDParameter = billID != null ?
                new ObjectParameter("BillID", billID) :
                new ObjectParameter("BillID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_CRM_ETLBillToPMS", billIDParameter);
        }
    
        public virtual int sp_CRM_MemberCardNoInsertModify(Nullable<long> memberCardStart, Nullable<long> memberCardEnd, string boxNo, string discardNum)
        {
            var memberCardStartParameter = memberCardStart.HasValue ?
                new ObjectParameter("MemberCardStart", memberCardStart) :
                new ObjectParameter("MemberCardStart", typeof(long));
    
            var memberCardEndParameter = memberCardEnd.HasValue ?
                new ObjectParameter("MemberCardEnd", memberCardEnd) :
                new ObjectParameter("MemberCardEnd", typeof(long));
    
            var boxNoParameter = boxNo != null ?
                new ObjectParameter("BoxNo", boxNo) :
                new ObjectParameter("BoxNo", typeof(string));
    
            var discardNumParameter = discardNum != null ?
                new ObjectParameter("DiscardNum", discardNum) :
                new ObjectParameter("DiscardNum", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CRM_MemberCardNoInsertModify", memberCardStartParameter, memberCardEndParameter, boxNoParameter, discardNumParameter);
        }
    
        public virtual int sp_CRM_BoxNoCreateNew(Nullable<int> boxNum, string provinceCode, Nullable<long> memberCardStart, Nullable<long> memberCardEnd, string customizeOddId, string discardNum)
        {
            var boxNumParameter = boxNum.HasValue ?
                new ObjectParameter("BoxNum", boxNum) :
                new ObjectParameter("BoxNum", typeof(int));
    
            var provinceCodeParameter = provinceCode != null ?
                new ObjectParameter("ProvinceCode", provinceCode) :
                new ObjectParameter("ProvinceCode", typeof(string));
    
            var memberCardStartParameter = memberCardStart.HasValue ?
                new ObjectParameter("MemberCardStart", memberCardStart) :
                new ObjectParameter("MemberCardStart", typeof(long));
    
            var memberCardEndParameter = memberCardEnd.HasValue ?
                new ObjectParameter("MemberCardEnd", memberCardEnd) :
                new ObjectParameter("MemberCardEnd", typeof(long));
    
            var customizeOddIdParameter = customizeOddId != null ?
                new ObjectParameter("CustomizeOddId", customizeOddId) :
                new ObjectParameter("CustomizeOddId", typeof(string));
    
            var discardNumParameter = discardNum != null ?
                new ObjectParameter("DiscardNum", discardNum) :
                new ObjectParameter("DiscardNum", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CRM_BoxNoCreateNew", boxNumParameter, provinceCodeParameter, memberCardStartParameter, memberCardEndParameter, customizeOddIdParameter, discardNumParameter);
        }
    
        public virtual int sp_CRM_MemberCardNoInsertNew(Nullable<long> memberCardStart, Nullable<long> memberCardEnd, string boxNo, string discardNum)
        {
            var memberCardStartParameter = memberCardStart.HasValue ?
                new ObjectParameter("MemberCardStart", memberCardStart) :
                new ObjectParameter("MemberCardStart", typeof(long));
    
            var memberCardEndParameter = memberCardEnd.HasValue ?
                new ObjectParameter("MemberCardEnd", memberCardEnd) :
                new ObjectParameter("MemberCardEnd", typeof(long));
    
            var boxNoParameter = boxNo != null ?
                new ObjectParameter("BoxNo", boxNo) :
                new ObjectParameter("BoxNo", typeof(string));
    
            var discardNumParameter = discardNum != null ?
                new ObjectParameter("DiscardNum", discardNum) :
                new ObjectParameter("DiscardNum", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CRM_MemberCardNoInsertNew", memberCardStartParameter, memberCardEndParameter, boxNoParameter, discardNumParameter);
        }
    
        public virtual int sp_Loy_AccountPointManualAdjustBatch(ObjectParameter successNum, ObjectParameter failNum)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Loy_AccountPointManualAdjustBatch", successNum, failNum);
        }
    }
}
